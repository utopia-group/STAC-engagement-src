/*
 * Decompiled with CFR 0_117.
 */
package com.ainfosec.MalwareAnalyzer;

import com.ainfosec.MalwareAnalyzer.Analysis;
import com.ainfosec.MalwareAnalyzer.ComparisonResult;
import com.ainfosec.MalwareAnalyzer.Dasm;
import java.util.HashMap;
import java.util.Map;
import java.util.NavigableSet;
import java.util.Set;
import java.util.TreeSet;

public class DasmDatabase {
    private static HashMap<String, Dasm> db = new HashMap();

    public static void add_dasm(String md5, Dasm dasm) {
        db.put(md5, dasm);
    }

    public static Dasm get_dasm(String md5) {
        return db.get(md5);
    }

    public static Set<String> get_all_dasm_md5s() {
        return db.keySet();
    }

    public static NavigableSet<ComparisonResult> compute_all_similarities(String query_dasm_md5) {
        Dasm query_dasm = DasmDatabase.get_dasm(query_dasm_md5);
        TreeSet<ComparisonResult> results = new TreeSet<ComparisonResult>();
        for (Map.Entry<String, Dasm> next_entry : db.entrySet()) {
            String cur_md5 = next_entry.getKey();
            Dasm cur_dasm = next_entry.getValue();
            if (query_dasm_md5.equals(cur_md5)) continue;
            double score = Analysis.compute_cosine_similarity(query_dasm, cur_dasm);
            results.add(new ComparisonResult(score, cur_md5));
        }
        return results;
    }
}

