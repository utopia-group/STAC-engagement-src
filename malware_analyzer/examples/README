Malware Analyzer services eight types of requests:

1) add Request: Adds information pertaining to a new malware sample to the internal database.
Example POST data:

add
ba78410702f0cc8453da1afbb2a8b67a
7904,2779,2065,2207,2637,1564,2193,1753,2453,1420,1676,1427,2009,1406,1947,1733,2165,1158,1291,
1163,1614,1076,1294,1570,1658,990,1100,1111,1430,1049,1225,1135,2283,1250,1001,1083,1251,1091,
918,1089,1214,897,933,1169,1126,1140,1124,1142,1772,927,1015,1073,1139,932,1038,1032,1323,1184,
835,1267,1234,909,899,915,1687,1389,1220,1337,1145,1222,1292,1156,1384,975,914,891,1119,1031,
1032,991,1757,947,959,1402,1068,1047,1340,1432,1230,1067,826,884,954,925,991,1045,1444,1249,865,
955,1112,1093,895,827,1875,1053,1493,783,1125,1002,1055,1124,1528,686,1106,1041,2036,1821,973,
1113,1249,1065,633,812,1175,980,1004,964,1770,1462,1176,1489,1337,1146,1187,878,1254,1475,936,
1708,962,1360,834,710,1064,689,707,633,738,627,725,725,781,564,642,582,800,556,1083,623,1050,
940,651,768,873,719,688,621,878,661,597,617,827,677,672,697,1219,747,603,636,856,723,854,858,
1119,605,695,839,824,747,900,840,1782,1258,1181,1069,858,608,955,907,951,704,619,578,768,530,627,
776,1094,712,763,696,781,562,792,741,1138,621,794,857,844,693,860,788,1528,897,741,646,788,440,
563,935,1040,641,642,1506,930,784,717,851,1523,751,554,620,923,563,896,895,1373,478,647,741,994,
668,854,3002

Explanation:

The POST data for an add request contains three lines: The first line contains only the text “add”, 
the second line is the 32 character MD5 digest of the executable, and the third line is the feature 
vector characterizing the executable. The feature vector is a comma separated list of 256 integers, 
where the 0th entry in the list corresponds to the number of 0x00 bytes in the executable, the next 
entry corresponds to the number of 0x01 bytes in the executable, and so on up to 0xFF.

=-=-=-=

2) query Request: Retrieve information about the top five most similar instances of malware relative 
to a specified instance of malware.
Example POST data:

query
ba78410702f0cc8453da1afbb2a8b67a

Explanation:

The POST data for a query request contains two lines: The first line contains only the text “query”, 
and the second line is the MD5 digest of the malware instance against which similarities should be 
computed.

=-=-=-=

3) Binary PUT Request: Extracts information from a PE32 binary executable and adds it to the internal 
database, in the same manner as an add request.
Example PUT data: <binary>

Explanation:

All HTTP PUT requests to the server are treated as Binary PUT requests; all other requests are expected 
to be HTTP POSTs.

=-=-=-=

4) add_dasm Request: Parses and constructs an internal representation of an objdump disassembly from a 
user’s input.

Example POST data:

add_dasm
01234567890123456789012345678901
windows_exes/notepad.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:       ef                      out    %eax,(%dx)
 1001001:       6f                      outsl  %ds:(%esi),(%dx)
 1001002:       dd 77 17                fnsave 0x17(%edi)
 1001005:       6c                      insb   (%dx),%es:(%edi)
 1001006:       dd 77 25                fnsave 0x25(%edi)
 1001009:       ba df 77 05 bd          mov    $0xbd0577df,%edx
 100100e:       df 77 ab                fbstp  -0x55(%edi)
 1001011:       7a dd                   jp     0x1000ff0
 1001013:       77 42                   ja     0x1001057
        …

Explanation:

The POST data for an add_dasm request contains an arbitrary number of lines, however the first line must 
contain only the text “add_dasm”, and the second line should be the MD5 digest of the malware instance 
whose disassembly has been uploaded. An objdump disassembly of a PE32 binary executable should follow on 
the ensuing lines. Such a disassembly can be generated using the “objdump -d <filename>” command.

=-=-=-=

5) list_dasms Request: Lists the MD5 sums of all previously add_dasm’d disassemblies.

Example POST data:

list_dasms

Explanation:

The POST data for a list_dasm request must contain only a single line, containing just “list_dasm”.

=-=-=-=

6) get_function_entrypoints Request:  Lists the virtual address of each function’s entry point in a 
specified disassembly.

Example POST data:

get_function_entrypoints
01234567890123456789012345678901

Explanation:

The POST data for a get_function_entrypoints request contains just two lines. The first line contains 
only the text “get_function_entrypoints”. The second line is a 32-character MD5 digest of a previously 
add_dasm’d disassembly, the list of which is available using a list_dasms request.

=-=-=-=

7) get_cfg Request: Obtains the control flow graph of a specified function.

Example POST data:

get_cfg
01234567890123456789012345678901
0x1003a39

Explanation: The POST data for a get_cfg request contains just three lines. The first line must contain 
only the string “get_cfg”. The second line is a 32-character MD5 digest of a previously add_dasm’d 
disassembly, the list of which is available using a list_dasms request. The third line the virtual 
address of a function’s entry point, specified as a hex string.

=-=-=-=

8) query_dasms Request: Retrieve information about the top five most similar instances of malware 
relative to a specified instance of malware, where similarity is determined using X86 opcode mnemonic 
1-grams.

Example POST data:

query_dasms
01234567890123456789012345678901

Explanation:  The POST data for a query_dasms request contains just two lines.  The first line must 
contain just “quest_dasms”.  The second line should be an MD5 digest that corresponds to a previously 
add_dasm’d disassembly.




