Overview
========
Malware Analyzer is a server program that helps analysts better understand 32-bit Windows malware. The
application combines two malware classifiers, a packer detector, and control flow graph generator. The 
classifiers help analysts triage new malware; they can use the service to determine whether new malware 
is similar to anything that they have previously analyzed.  The packer detector tells the analyst whether 
or not to trust the classifier’s results, since the process of packing a binary executable obfuscates 
the features used by the classifier.  The control flow graph generator enables the analyst to more easily 
explore their input files.

Both malware classifiers compute the pairwise similarity of a new malware instance with each of the 
previously submitted malware and return a rank ordered list of the top five most similar malware and their 
respective similarity scores. The first classifier uses byte 1-grams as features and the second classifier 
uses X86 opcode mnemonics as features.

The input to the first of Malware Analyzer's two classifiers is an MD5 digest and a byte n-gram feature 
vector extracted from a new instance of malware. The expectation is that the analyst would use some (non-
provided) client to extract feature vectors from malware binaries and submit them to the service. Likewise, 
the input to the second classifier is an MD5 digest and a disassembly of the PE32 binary executable 
generated by an "objdump -d <filename>" command.

The output from the first classifier includes whether the input file was packed and also the rank ordered 
list of the top five most similar malware with respect to their byte 1-gram similarity scores. The output 
of the second classifier includes the rank ordered list of the top five most similar malware with respect 
to their opcode mnemonic similarity scores.

The input to the control flow graph generator is an objdump disassembly of the PE32 binary executable, as 
generated by an "objdump -d <filename>" command.


Interactions
============
Requests are made to the Malware Analyzer server using HTTP POST and HTTP PUT requests. Only the contents 
of a request’s POST data are used by the server; i.e., there are no URL arguments. All requests are made 
to: http://localhost:8001/

Malware Analyzer services 8 types of requests:
1) add Request: Adds information pertaining to a new malware sample to the internal database.
2) query Request: Retrieve information about the top five most similar instances of malware relative to a 
specified instance of malware.
3) Binary PUT Request: Extracts information from a PE32 binary executable and adds it to the internal 
database, in the same manner as an add request.
4) add_dasm Request: Parses and constructs an internal representation of an objdump disassembly from a 
user’s input.
5) list_dasms Request: Lists the MD5 sums of all previously add_dasm’d disassemblies.
6) get_function_entrypoints Request:  Lists the virtual address of each function’s entry point in a 
specified disassembly.
7) get_cfg Request: Obtains the control flow graph of a specified function.
8) query_dasms Request: Retrieve information about the top five most similar instances of malware relative 
to a specified instance of malware, where similarity is determined using X86 opcode mnemonic 1-grams.

Further details on each interaction are shown in the README file in the examples directory. Example input
scripts are also located in the examples directory.


Engagement Tools
================
The start script (startServer.sh) for the Malware Analyzer server is located in the challenge_program
directory.


Notes
=====
The files in the challenge program directory are used to populate the Malware Analyzer server on launch. 
These files should not be directly modified nor should malicious data be directly inserted into them.
